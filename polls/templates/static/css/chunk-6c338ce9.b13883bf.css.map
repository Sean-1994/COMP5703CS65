{"version":3,"sources":["webpack:///src/views/neo4j/C:/Users/46121/PycharmProjects/cs65_redis/gerapy/client/src/views/neo4j/src/views/neo4j/neo4j.vue","chunk-6c338ce9.b13883bf.css"],"names":[],"mappings":"AAqDA,wBAEA,qBAAA,CACA,YAAA,CACA,YAAA,CAEA,UAAA,CACA,iBCnDA","file":"chunk-6c338ce9.b13883bf.css","sourcesContent":["<template>\r\n  <head>\r\n  <style> body { margin: 0; } </style>\r\n\r\n  <script src=\"//unpkg.com/3d-force-graph\"></script>\r\n  <script src=\"https://unpkg.com/neo4j-driver\"></script>\r\n  <!--<script src=\"../../dist/3d-force-graph.js\"></script>-->\r\n</head>\r\n\r\n<body>\r\n  <div id=\"3d-graph\"></div>\r\n\r\n  <script>\r\n    const elem = document.getElementById('3d-graph');\r\n    const driver = neo4j.driver(\"bolt://demo.neo4jlabs.com\", neo4j.auth.basic(\"gameofthrones\", \"gameofthrones\"),{encrypted: true});\r\n\tconst session = driver.session({database:\"gameofthrones\"});\r\n\tconst start = new Date()\r\n    session\r\n      .run('MATCH (n)-[r:INTERACTS1]->(m) RETURN { id: id(n), label:head(labels(n)), community:n.louvain, caption:n.name, size:n.pagerank } as source, { id: id(m), label:head(labels(m)), community:n.louvain, caption:m.name, size:m.pagerank } as target, {weight:r.weight, type:type(r), community:case when n.community < m.community then n.community else m.community end} as rel LIMIT $limit', {limit: neo4j.int(5000)})\r\n      .then(function (result) {\r\n        const nodes = {}\r\n        const links = result.records.map(r => {\r\n\t       var source = r.get('source');source.id = source.id.toNumber();\r\n           nodes[source.id] = source;\r\n\t       var target = r.get('target');target.id = target.id.toNumber();\r\n           nodes[target.id] = target;\r\n           var rel = r.get('rel'); if (rel.weight) { rel.weight = rel.weight.toNumber(); }\r\n\t       return Object.assign({source:source.id,target:target.id}, rel);\r\n\t    });\r\n        session.close();\r\n        console.log(links.length+\" links loaded in \"+(new Date()-start)+\" ms.\")\r\n        const gData = { nodes: Object.values(nodes), links: links}\r\n        const Graph = ForceGraph3D()(elem)\r\n                      .graphData(gData)\r\n                      .nodeAutoColorBy('community')\r\n                      .nodeVal('size')\r\n                      .linkAutoColorBy('community')\r\n                      .linkWidth(0)\r\n                      .linkDirectionalParticles('weight')\r\n                      .linkDirectionalParticleSpeed('weight')\r\n                      .nodeLabel(node => `${node.label}: ${node.caption}`)\r\n                      .onNodeHover(node => elem.style.cursor = node ? 'pointer' : null);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  </script>\r\n</body>\r\n</template>\r\n\r\n\r\n\r\n<style scoped>\r\n#graph{\r\n\r\n  background-color: rgba(0,0,0,1);\r\n  padding: 1rem;\r\n  height:100vh;\r\n  /*min-width: 300px;*/\r\n  width: 100%;\r\n  border-radius: 5px;\r\n}\r\n</style>","\n#graph[data-v-2698e0af]{\r\n\r\n  background-color: rgba(0,0,0,1);\r\n  padding: 1rem;\r\n  height:100vh;\r\n  /*min-width: 300px;*/\r\n  width: 100%;\r\n  border-radius: 5px;\n}\r\n\n\n/*# sourceMappingURL=chunk-6c338ce9.b13883bf.css.map*/"]}